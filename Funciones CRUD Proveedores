package Formularios;

import ConexionSQL.conexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SistemaProveedores extends javax.swing.JFrame {

    conexionSQL cc = new conexionSQL();
    Connection con = cc.conexion();

    public SistemaNombreTabla() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("AdministraciÃ³n de Proveedores");
        mostrarDatos();
    }
    
    public void mostrarDatos() {
        String[] titulos = {"cod_proveedor", "Rut","Nombre", "Direccion", "Cantidad","Telefono", "MateriaPrima","Precio"};
        String[] registros = new String[9];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        String SQL = "select Proveedor.cod_proveedor, Proveedor.rut, Proveedor.nombre, Proveedor.direccion, Proveedor.cantidad, Proveedor.telefono, MateriaPrima.nombre, Proveedor.precio \n" +"\n" +
            "from Proveedor\n" +
           "join MateriaPrima on Proveedor.materiaprima_cod = MateriaPrima.cod_materiaprima";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {

                registros[0] = rs.getString("cod_proveedor");
                registros[1] = rs.getString("rut");
                registros[2] = rs.getString("nombre");
                registros[3] = rs.getString("direccion");
                registros[4] = rs.getString("cantidad");
                registros[5] = rs.getString("Telefono");
                registros[6] = rs.getString("MateriaPrima.nombre");
                registros[7] = rs.getString("precio");

                modelo.addRow(registros);

            }

            TablaProveedores.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage());

        }
    }
    
     public void filtrarDatos(String valor) {
        String[] titulos = {"cod_proveedor", "Rut","Nombre", "Direccion", "Cantidad","Telefono", "MateriaPrima","Precio"};
        String[] registros = new String[8];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        String SQL = "select * from Proveedor where nombre like '%" + valor + "%'";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {

                registros[0] = rs.getString("cod_proveedor");
                registros[1] = rs.getString("rut");
                registros[2] = rs.getString("nombre");
                registros[3] = rs.getString("direccion");
                registros[4] = rs.getString("cantidad");
                registros[5] = rs.getString("telefono");
                registros[6] = rs.getString("materiaprima_cod");
                registros[7] = rs.getString("precio");
                

                modelo.addRow(registros);

            }

            TablaProveedores.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage());

        }
    }

    public void eliminarRegistros() {
        int filaSeleccionada = TablaProveedores.getSelectedRow();

        try {
            String SQL = "delete from Proveedor where cod_proveedor=" + TablaProveedores.getValueAt(filaSeleccionada, 0);
            Statement st = con.createStatement();
            int n = st.executeUpdate(SQL);
            if (n >= 0) {
                JOptionPane.showMessageDialog(null, "Registro Eliminado");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar registro" + e.getMessage());

        }
    }

    public void limpiarCajas() {

        txtCodProveedor.setText("");
        txtRut.setText("");
        txtNombre.setText("");
        txtDireccion.setText("");
        txtCantidad.setText("");
        txtTelefono.setText("");
        cbCodMatPrim.setSelectedItem(null);
        txtPrecio.setText("");
    }

public void ActualizarDatos(){
    
    try{
        String SQL="update Proveedor set cod_proveedor=?,rut=?,nombre=?,direccion=?,cantidad=?,telefono=?,materiaprima_cod=?,precio=? where cod_proveedor=?";
        int filaSeleccionado=TablaProveedores.getSelectedRow();
        String dao=(String)TablaProveedores.getValueAt(filaSeleccionado, 0);
        PreparedStatement pst=con.prepareStatement(SQL);
        
        pst.setInt(1,Integer.parseInt(txtCodProveedor.getText()));  
        pst.setInt(2,Integer.parseInt(txtRut.getText()));
        pst.setString(3,txtNombre.getText());
        pst.setString(4,txtDireccion.getText());
        pst.setInt(5,Integer.parseInt(txtCantidad.getText()));
        pst.setInt(6,Integer.parseInt(txtTelefono.getText()));
        int seleccionado=cbCodMatPrim.getSelectedIndex();
        pst.setString(7,cbCodMatPrim.getItemAt(seleccionado));
        pst.setInt(8,Integer.parseInt(txtPrecio.getText()));
        
       
        
        pst.setString(9, dao);
        pst.execute();
        JOptionPane.showMessageDialog(null,"Registro Editado Exitoso" );
        
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Error de edicion"+ e.getMessage() );
    }
}

public void insertarDatos(){
    
    try{
        String SQL="insert into Proveedor(cod_proveedor,rut,nombre,direccion,cantidad,telefono,materiaprima_cod,precio) values(?,?,?,?,?,?,?,?) ";
        PreparedStatement pst=con.prepareStatement(SQL);
        
        pst.setInt(1,Integer.parseInt(txtCodProveedor.getText()));
        pst.setInt(2,Integer.parseInt(txtRut.getText()));
        pst.setString(3,txtNombre.getText());
        pst.setString(4,txtDireccion.getText());
        pst.setInt(5,Integer.parseInt(txtCantidad.getText()));
        pst.setInt(6,Integer.parseInt(txtTelefono.getText()));
        int seleccionado=cbCodMatPrim.getSelectedIndex();
        pst.setString(7,cbCodMatPrim.getItemAt(seleccionado));
        pst.setInt(8,Integer.parseInt(txtPrecio.getText()));
       
        pst.execute();
        JOptionPane.showMessageDialog(null,"Registro Exitoso" );
        
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Error de registros"+ e.getMessage() );
    }
} 
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SistemaProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SistemaProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SistemaProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SistemaProveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SistemaProveedores().setVisible(true);
            }
        });
    }
