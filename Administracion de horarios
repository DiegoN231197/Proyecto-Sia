package Formularios;

import ConexionSQL.conexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class HorariosEmpleados extends javax.swing.JFrame {
    
    conexionSQL cc=new conexionSQL();
    Connection con=cc.conexion();

    
   
    public HorariosEmpleados() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Administración de Cervezas");
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        cbEntrada = new javax.swing.JComboBox<>();
        cbSalida = new javax.swing.JComboBox<>();
        txtCodEmp = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaHorarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Código Empleado:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Horario Entrada:");

        jLabel4.setText("Horario Salida:");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        cbEntrada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", " " }));

        cbSalida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "16:00", "17:00", "18:00", "19:00", "20:00" }));

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        jLabel5.setText("Buscar:");

        TablaHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TablaHorarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaHorariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaHorarios);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnActualizar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(70, 70, 70))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNombre)
                                .addGap(18, 18, 18)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnActualizar)
                        .addGap(34, 34, 34))))
        );

        pack();
    }// </editor-fold>                        

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {                                      
        filtrarDatos(txtBuscar.getText());// TODO add your handling code here:
    }                                     

    private void TablaHorariosMouseClicked(java.awt.event.MouseEvent evt) {                                           
        int filaSeleccionada= TablaHorarios.rowAtPoint(evt.getPoint());
        txtCodEmp.setText(TablaHorarios.getValueAt(filaSeleccionada, 0).toString());
        txtNombre.setText(TablaHorarios.getValueAt(filaSeleccionada, 1).toString());
        cbEntrada.setSelectedItem(TablaHorarios.getValueAt(filaSeleccionada, 2));
        cbSalida.setSelectedItem(TablaHorarios.getValueAt(filaSeleccionada, 3));
// TODO add your handling code here:
    }                                          

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {                                              
        ActualizarDatos();
        limpiarCajas();
        mostrarDatos();// TODO add your handling code here:
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HorariosEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HorariosEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HorariosEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HorariosEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HorariosEmpleados().setVisible(true);
            }
        });
    }
    
    
    public void insertarDatos(){
    
    try{
        String SQL="insert into Empleado(cod_cerveza,nombre,horario_entrada,horario_salida) values(?,?,?,?) ";
        PreparedStatement pst=con.prepareStatement(SQL);
        
        pst.setInt(1,Integer.parseInt(txtCodEmp.getText()));
        pst.setString(2,txtNombre.getText());
        int seleccionado=cbEntrada.getSelectedIndex();
        pst.setString(3,cbEntrada.getItemAt(seleccionado));
        int seleccionadoSab=cbSalida.getSelectedIndex();
        pst.setString(4,cbSalida.getItemAt(seleccionadoSab));
        
        pst.execute();
        JOptionPane.showMessageDialog(null,"Se ha modificado el horario" );
        
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Error de modificacion"+ e.getMessage() );
    }
    
    
    
} 
    public void mostrarDatos(){
    String [] titulos= {"Código Empleado","Nombre","Entrada","Salida"};
    String [] registros= new String[5];
    DefaultTableModel modelo=new DefaultTableModel(null,titulos);
    String SQL="select * from Empleado";
    try{
        Statement st=con.createStatement();
        ResultSet rs=st.executeQuery(SQL);
        while(rs.next()){
            
        registros[0]=rs.getString("cod_empleado");
        registros[1]=rs.getString("nombre");
        registros[2]=rs.getString("horario_entrada");
        registros[3]=rs.getString("horario_salida");
        
        
        modelo.addRow(registros);
        
        }
        
        TablaHorarios.setModel(modelo);
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Error al mostrar datos" + e.getMessage());
        
    }
}
    
    public void filtrarDatos(String valor){
    String [] titulos= {"cod_empleado","Nombre","Horario_entrada","Horario_salida"};
    String [] registros= new String[5];
    DefaultTableModel modelo=new DefaultTableModel(null,titulos);
    String SQL="select * from Empleado where nombre like '%" + valor +"%'";
    try{
        Statement st=con.createStatement();
        ResultSet rs=st.executeQuery(SQL);
        while(rs.next()){
            
        registros[0]=rs.getString("cod_empleado");
        registros[1]=rs.getString("nombre");
        registros[2]=rs.getString("horario_entrada");
        registros[3]=rs.getString("horario_salida");
        
        
        modelo.addRow(registros);
        
        }
        
        TablaHorarios.setModel(modelo);
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Error al mostrar datos" + e.getMessage());
        
    }
}
    
    public void limpiarCajas(){
    
    txtCodEmp.setText("");
    txtNombre.setText("");
    cbEntrada.setSelectedItem(null);
    cbSalida.setSelectedItem(null);
    
}
    
    public void ActualizarDatos(){
    
    try{
        String SQL="update Empleado set cod_empleado=?,nombre=?,horario_entrada=?,horario_salida=? where cod_empleado=?  ";
        int filaSeleccionado=TablaHorarios.getSelectedRow();
        String dao=(String)TablaHorarios.getValueAt(filaSeleccionado, 0);
        PreparedStatement pst=con.prepareStatement(SQL);
        
        pst.setInt(1,Integer.parseInt(txtCodEmp.getText()));
        pst.setString(2,txtNombre.getText());
        
        int seleccionado=cbEntrada.getSelectedIndex();
        pst.setString(3,cbEntrada.getItemAt(seleccionado));
        int seleccionadoSab=cbSalida.getSelectedIndex();
        pst.setString(4,cbSalida.getItemAt(seleccionadoSab));
       
        
        pst.setString(5, dao);
        pst.execute();
        JOptionPane.showMessageDialog(null,"Horario Editado " );
        
        
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,"Error de edicion"+ e.getMessage() );
    }
}

    // Variables declaration - do not modify                     
    private javax.swing.JTable TablaHorarios;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JComboBox<String> cbEntrada;
    private javax.swing.JComboBox<String> cbSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCodEmp;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration                   
}
